;;
;; Header files for MainContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Join$_store
builder $Join$_store(builder build_0, (slice) v) inline;

;; $Join$_store_cell
cell $Join$_store_cell((slice) v) inline;

;; $MainContract$_store
builder $MainContract$_store(builder build_0, (slice, int) v) inline;

;; $MainContract$_load
(slice, ((slice, int))) $MainContract$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $ContractData$_to_external
(int, slice) $ContractData$_to_external(((int, slice)) v) inline;

;; $MainContract$init$_load
(slice, ((slice))) $MainContract$init$_load(slice sc_0) inline;

;; $Round$init$_store
builder $Round$init$_store(builder build_0, (int, slice) v) inline;

;; $MainContract$_contract_init
(slice, int) $MainContract$_contract_init(slice $owner) impure inline_ref;

;; $MainContract$_contract_load
(slice, int) $MainContract$_contract_load() impure inline_ref;

;; $MainContract$_contract_store
() $MainContract$_contract_store((slice, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $MainContract$_fun_msgValue
((slice, int), int) $MainContract$_fun_msgValue((slice, int) $self, int $msgValue) impure inline_ref;

;; $Round$_init_child
(cell, cell) $Round$_init_child(cell sys', int $_round, slice $_contract) inline_ref;

;; $MainContract$_fun_get_round_contract_address
((slice, int), slice) $MainContract$_fun_get_round_contract_address((slice, int) $self, int $round_id) impure inline_ref;

;; $ContractData$_constructor_round_id_current_round_address
((int, slice)) $ContractData$_constructor_round_id_current_round_address(int round_id, slice current_round_address) inline;

;; $MainContract$_fun_get_current_data
((slice, int), (int, slice)) $MainContract$_fun_get_current_data((slice, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $MainContract$_fun_forward
((slice, int), ()) $MainContract$_fun_forward((slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $MainContract$_fun_notify
((slice, int), ()) $MainContract$_fun_notify((slice, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_body_value_mode_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode_code_data(slice to, cell body, int value, int mode, cell code, cell data) inline;

;; $Join$_constructor_participator
((slice)) $Join$_constructor_participator(slice participator) inline;

;; $SendParameters$_constructor_to_body_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode(slice to, cell body, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
